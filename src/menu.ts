import readlinesync = require("readline-sync");
import { colors } from "..//components/util/color"; // paleta de cores

export function main() {
    let opcao: number;

    while (true) {
        // Limpa o console antes de exibir o menu
        console.clear();

        // Cor de fundo escura para o t√≠tulo e bordas
        console.log(`${colors.bg.blackbright}${colors.fg.white}*****************************************************${colors.reset}`);
        console.log(`${colors.bg.blackbright}${colors.fg.white}*                                                   *${colors.reset}`);
        console.log(`${colors.bg.blue}${colors.fg.white}*                üåê  NEONVAULT BANK AI  üåê         *${colors.reset}`);
        console.log(`${colors.bg.blue}${colors.fg.white}*          ** Onde o futuro encontra o dinheiro **  *${colors.reset}`);
        console.log(`${colors.bg.blackbright}${colors.fg.white}*                                                   *${colors.reset}`);
        console.log(`${colors.bg.blackbright}${colors.fg.white}*****************************************************${colors.reset}`);
        console.log(`${colors.bg.green}${colors.fg.white}*                                                   *${colors.reset}`);
        
        // Op√ß√µes com fundo azul escuro e texto branco
        console.log(`${colors.bg.blue}${colors.fg.white}*            1Ô∏è‚É£  Criar Conta                          *${colors.reset}`);
        console.log(`${colors.bg.blue}${colors.fg.white}*            2Ô∏è‚É£  Listar todas as Contas               *${colors.reset}`);
        console.log(`${colors.bg.blue}${colors.fg.white}*            3Ô∏è‚É£  Buscar Conta por N√∫mero              *${colors.reset}`);
        console.log(`${colors.bg.blue}${colors.fg.white}*            4Ô∏è‚É£  Atualizar Dados da Conta             *${colors.reset}`);
        console.log(`${colors.bg.blue}${colors.fg.white}*            5Ô∏è‚É£  Apagar Conta                         *${colors.reset}`);
        console.log(`${colors.bg.blue}${colors.fg.white}*            6Ô∏è‚É£  Realizar Saque                       *${colors.reset}`);
        console.log(`${colors.bg.blue}${colors.fg.white}*            7Ô∏è‚É£  Fazer Dep√≥sito                       *${colors.reset}`);
        console.log(`${colors.bg.blue}${colors.fg.white}*            8Ô∏è‚É£  Transferir Valores entre Contas      *${colors.reset}`);
        console.log(`${colors.bg.blue}${colors.fg.white}*            9Ô∏è‚É£  Visualizar Extrato                   *${colors.reset}`);
        console.log(`${colors.bg.blue}${colors.fg.white}*            üîü  Sair                                 *${colors.reset}`);
        console.log(`${colors.bg.green}${colors.fg.white}*                                                   *${colors.reset}`);
        console.log(`${colors.bg.green}${colors.fg.white}*****************************************************${colors.reset}`);
        
        // Fundo em vermelho para destacar a se√ß√£o de seguran√ßa
        console.log(`${colors.bg.redbright}${colors.fg.white}*       üí° Seguran√ßa cibern√©tica de √∫ltima gera√ß√£o üí°  *${colors.reset}`);
        console.log(`${colors.bg.redbright}${colors.fg.white}*****************************************************${colors.reset}`);

        // Solicita a op√ß√£o do usu√°rio
        opcao = readlinesync.questionInt("\nEscolha uma op√ß√£o: ");

        if (opcao === 10) {
            console.log("\nObrigado por usar o NeonVault Bank AI!");
            sobre();
            break; // Encerra o loop e finaliza o programa
        }

        // Processa a op√ß√£o escolhida
        switch (opcao) {
            case 1:
                console.log(`${colors.bg.green}${colors.fg.white}\n\nüëâ Criar Conta\n${colors.reset}`);
                break;
            case 2:
                console.log(`${colors.bg.green}${colors.fg.white}\n\nüëâ Listar todas as Contas\n${colors.reset}`);
                break;
            case 3:
                console.log(`${colors.bg.green}${colors.fg.white}\n\nüëâ Buscar Conta por N√∫mero\n${colors.reset}`);
                break;
            case 4:
                console.log(`${colors.bg.green}${colors.fg.white}\n\nüëâ Atualizar Dados da Conta\n${colors.reset}`);
                break;
            case 5:
                console.log(`${colors.bg.green}${colors.fg.white}\n\nüëâ Apagar Conta\n${colors.reset}`);
                break;
            case 6:
                console.log(`${colors.bg.green}${colors.fg.white}\n\nüëâ Realizar Saque\n${colors.reset}`);
                break;
            case 7:
                console.log(`${colors.bg.green}${colors.fg.white}\n\nüëâ Fazer Dep√≥sito\n${colors.reset}`);
                break;
            case 8:
                console.log(`${colors.bg.green}${colors.fg.white}\n\nüëâ Transferir Valores entre Contas\n${colors.reset}`);
                break;
            case 9:
                console.log(`${colors.bg.green}${colors.fg.white}\n\nüëâ Visualizar Extrato\n${colors.reset}`);
                break;
            default:
                console.log(`${colors.bg.redbright}${colors.fg.white}\n‚ùå Op√ß√£o Inv√°lida! Por favor, tente novamente.\n${colors.reset}`);
                break;
        }

        // Pausa antes de retornar ao menu
        readlinesync.question("\nPressione ENTER para continuar...");
    }
}

/* Fun√ß√£o com informa√ß√µes sobre o projeto */
export function sobre(): void {
    console.log(`${colors.bg.blackbright}${colors.fg.white}\n*****************************************************${colors.reset}`);
    console.log(`${colors.bg.blackbright}${colors.fg.white}*       Projeto Desenvolvido por: Eliseu F Souza      *${colors.reset}`);
    console.log(`${colors.bg.blackbright}${colors.fg.white}*       Contato: eliseu.de1souza@gmail.com           *${colors.reset}`);
    console.log(`${colors.bg.blackbright}${colors.fg.white}*       GitHub: github.com/EliseuZz            *${colors.reset}`);
    console.log(`${colors.bg.blackbright}${colors.fg.white}*****************************************************${colors.reset}`);
}

// Executa o programa
main();
